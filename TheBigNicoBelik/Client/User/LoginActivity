package com.dontknow.myapplication231;

import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;

import android.content.Intent;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.TextView;
import android.widget.Toast;

import com.dontknow.myapplication231.Driver.Driver;
import com.dontknow.myapplication231.User.MainActivity;
import com.google.gson.JsonObject;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.Socket;

import butterknife.BindView;
import butterknife.ButterKnife;


public class LoginActivity extends AppCompatActivity {
    private static final String TAG = "LoginActivity";
    private static final int REQUEST_SIGNUP = 0;

    private Socket socket;
    private static final String debug = "debug";
    private static final String info = "INFO";
    protected static String server_IP = "192.168.123.2";
    protected static final int server_Port = 8607;
    ProgressDialog progressDialog;

    private String email;
    private String password;



    @BindView(R.id.input_email) EditText _emailText;
    @BindView(R.id.input_password) EditText _passwordText;
    @BindView(R.id.btn_login) Button _loginButton;
    @BindView(R.id.acc_enable) TextView _signupLink;
    @BindView(R.id.user_client) RadioButton client;
    @BindView(R.id.user_driver) RadioButton driver;


    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);
        ButterKnife.bind(this);

         progressDialog = new ProgressDialog(LoginActivity.this,
                R.style.Theme_AppCompat_Dialog);




        _loginButton.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                login();
            }
        });

        _signupLink.setOnClickListener(new View.OnClickListener() {

            @Override
            public void onClick(View v) {
                // Start the Signup activity
                Intent intent = new Intent(getApplicationContext(), SignupActivity.class);
                startActivityForResult(intent, REQUEST_SIGNUP);
            }
        });
    }

    public void login() {
        Log.d(TAG, "Login");

        if (!validate()) {
            onLoginFailed();
            return;
        }

        _loginButton.setEnabled(false);

        //LOGIN
        email = _emailText.getText().toString();
        password = _passwordText.getText().toString();
        new SendDataToServer().execute(email,password);


    }


    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        if (requestCode == REQUEST_SIGNUP) {
            if (resultCode == RESULT_OK) {




            }
        }
    }


    @Override
    public void onBackPressed() {
        // disable going back to the MainActivity
        moveTaskToBack(true);
    }

    public void onLoginSuccess() {
        _loginButton.setEnabled(true);
        finish();
        if (driver.isChecked()) {
            Intent intent = new Intent(LoginActivity.this, Driver.class);
            startActivity(intent);
        } else if (client.isChecked()) {
            Intent intent1 = new Intent(LoginActivity.this, MainActivity.class);
            startActivity(intent1);
        }
    }

    public void onLoginFailed() {
        Toast.makeText(getBaseContext(), "Login failed", Toast.LENGTH_LONG).show();

        _loginButton.setEnabled(true);
    }

    public boolean validate() {
        boolean valid = true;

        email = _emailText.getText().toString();
        password = _passwordText.getText().toString();

        if (email.isEmpty() || !android.util.Patterns.EMAIL_ADDRESS.matcher(email).matches()) {
            _emailText.setError("enter a valid email address");
            valid = false;
        } else {
            _emailText.setError(null);
        }

        if (password.isEmpty() || password.length() < 4 || password.length() > 10) {
            _passwordText.setError("between 4 and 10 alphanumeric characters");
            valid = false;
        } else {
            _passwordText.setError(null);
        }
        if(!driver.isChecked() &&!client.isChecked()) {
            Toast toast = Toast.makeText(getApplicationContext(), "Set a client or driver at first", Toast.LENGTH_SHORT);
            toast.show();
            valid = false;
        }

        return valid;
    }
    class SendDataToServer extends AsyncTask<String,Void,Void> {
        private String name;
        private String password;





        @Override
        protected void onPreExecute() {

            progressDialog.setIndeterminate(true);
            progressDialog.setMessage("Authenticating...");
            progressDialog.show();
        }
        @Override
        protected Void doInBackground(final String... data) {

            final Thread thread = new Thread(new Runnable() {
                @Override
                public void run() {
                    try {




                        Log.i(debug,"Attempt to connect to server");

                        socket = new Socket(server_IP,server_Port);
                        Log.i(debug,"Connection established");


                        JsonObject user =  new JsonObject();

                        user.addProperty("email", data[0]);
                        user.addProperty("password", data[1]);



                        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()));
                        bw.write(user.toString());
                        bw.newLine();
                        bw.flush();
                        Log.i(info,"JSON has sent");


                        BufferedReader br = new BufferedReader(new InputStreamReader(socket.getInputStream()));
                        br.readLine();
                        Log.i(info,br.readLine());

                    }catch (IOException e) {
                        Log.e(debug,"Failed");
                    }

                }
            });thread.start();
            return null;
        }



        @Override
        protected void onPostExecute(Void aVoid) {
            new android.os.Handler().postDelayed(
                    new Runnable() {
                        public void run() {
                            // On complete call either onLoginSuccess or onLoginFailed
                            onLoginSuccess();
                            // onLoginFailed();
                            progressDialog.dismiss();
                        }
                    }, 3000);
        }


    }
}
